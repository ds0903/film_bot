import asyncio

from aiogram import Router, types
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from handlers.logic import (search_films_new, search_films_year,
                            search_films_zhanr)

router = Router()


class Form(StatesGroup):
    waiting_for_zhanr = State()
    waiting_for_year = State()


@router.message(Command("start"))
async def cmd_start(message: types.Message):

    text = "–ü—Ä–∏–≤—ñ—Ç, —è –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ç–æ–≥–æ –∞–±–∏ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º –∑–Ω–∞–π—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ñ—ñ–ª—å–º."
    text1 = "–±—É–¥—å–ª–∞—Å–∫–∞ –æ–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–º –¥—ñ—é"

    kb = [
        [KeyboardButton(text="–ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫"), KeyboardButton(text="–î–æ–ø–æ–º–æ–≥–∞")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await message.answer(text)
    await asyncio.sleep(1)
    await message.answer(text1, reply_markup=keyboard)


@router.message(lambda message: message.text == "–ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫")
async def cmd_poshuk_films(message: types.Message):
    """–û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è –ø–æ—à—É–∫—É —Ñ—ñ–ª—å–º–∞ –∑–∞ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏"""
    kb = [
        [KeyboardButton(text="–ü–æ—à—É–∫ –ø–æ —Ä–æ–∫–∞–º"), KeyboardButton(text="–ü–æ—à—É–∫ –ø–æ –∂–∞–Ω—Ä—É")],
        [KeyboardButton(text="–î–æ–ø–æ–º–æ–≥–∞")],
        [KeyboardButton(text="–ù–æ–≤–∏–Ω–∫–∏"), KeyboardButton(text="–ú–µ–Ω—é")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

    text3 = str("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–º –¥—ñ—é")
    await asyncio.sleep(1)
    await message.answer(text3, reply_markup=keyboard)


@router.message(lambda message: message.text == "–ú–µ–Ω—é")
async def show_menu(message: types.Message):

    await cmd_start(message)


@router.message(lambda message: message.text == "–ù–æ–≤–∏–Ω–∫–∏")
async def cmd_novinki(message: types.Message):
    text = "–ü–ª–∞–Ω–µ—Ç–∞ –æ–±–µ–∑—å—è–Ω"
    name, zhanr, year, rating = await search_films_new(text)
    text1 = f"–°–≤—ñ–∂–∏–π —Ñ—ñ–ª—å–º –Ω–∞ –≤–µ—á—ñ—Ä: \n—ñ–º'—è: {name}\n–∂–∞–Ω—Ä: {zhanr}\n—Ä—ñ–∫{year}\n—Ä–µ–π—Ç–∏–Ω–≥: {rating}"
    await message.reply(text1, reply_markup=types.ReplyKeyboardRemove())
    await return_menu(message)


@router.message(lambda message: message.text == "–ù–∞–∑–∞–¥")
async def return_menu(message: types.Message):
    """–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –Ω–∞ –ø—É–Ω–∫—Ç –Ω–∞–∑–∞–¥ –ø—ñ—Å–ª—è –ø–æ—à—É–∫—É"""
    kb = [
        [KeyboardButton(text="–ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫"), KeyboardButton(text="–ú–µ–Ω—é")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await asyncio.sleep(2)
    await message.reply(
        "–î–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –º–µ–Ω—é —Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –∞–±–æ —Å–ø—Ä–æ–±—É–π —â–µ —â–æ—Å—å –∑–Ω–∞–π—Ç–∏",
        reply_markup=keyboard,
    )


@router.message(lambda message: message.text == "–ü–æ—à—É–∫ –ø–æ –∂–∞–Ω—Ä—É")
async def cmd_zhanr(message: types.Message, state: FSMContext):

    await message.reply(
        "–ù–∞–ø–∏—à—ñ—Ç—å –∂–∞–Ω—Ä —Ñ—ñ–ª—å–º—É", reply_markup=types.ReplyKeyboardRemove()
    )
    await state.set_state(Form.waiting_for_zhanr)

    @router.message(Form.waiting_for_zhanr)
    async def cmd_zhanr(message: types.Message):
        films = message.text
        name, zhanr, year, rating = await search_films_zhanr(films)

        if zhanr:
            await message.answer("üëæ")
            await message.answer(
                f"–ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—ñ–ª—å–º –Ω–∞ –≤–µ—á—ñ—Ä: \n—ñ–º'—è: {name}\n–∂–∞–Ω—Ä: {zhanr}\n—Ä—ñ–∫: {year}\n—Ä–µ–π—Ç–∏–Ω–≥: {rating}"
            )
            await return_menu(message)
            await state.clear()
        else:
            await message.answer("–§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            await return_menu(message)


@router.message(lambda message: message.text == "–ü–æ—à—É–∫ –ø–æ —Ä–æ–∫–∞–º")
async def cmd_roki(message: types.Message, state: FSMContext):

    await message.reply(
        "–ù–∞–ø–∏—à—ñ—Ç—å —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É —Ñ—ñ–ª—å–º—É", reply_markup=types.ReplyKeyboardRemove()
    )
    await state.set_state(Form.waiting_for_year)

    @router.message(Form.waiting_for_year)
    async def cmd_year(message: types.Message):
        films = message.text
        name, zhanr, year, rating = await search_films_year(films)

        if year:
            await message.answer("üëæ")
            await message.answer(
                f"–ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—ñ–ª—å–º –Ω–∞ –≤–µ—á—ñ—Ä: \n—ñ–º'—è: {name}\n–∂–∞–Ω—Ä: {zhanr}\n—Ä—ñ–∫: {year}\n—Ä–µ–π—Ç–∏–Ω–≥: {rating}"
            )
            await return_menu(message)
            await state.clear()
        else:
            await message.answer("–§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            await return_menu(message)


@router.message(lambda message: message.text == "–î–æ–ø–æ–º–æ–≥–∞")
async def cmd_dopomoga(message: types.Message):
    text = str(
        "–í–∏ –º–æ–∂–µ—Ç–µ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –¥–æ —Ä–æ–∑—Ä–æ–∑–±–Ω–∏–∫–∞ @ds0903",
    )
    await message.reply(text, reply_markup=types.ReplyKeyboardRemove())
    kb = [
        [KeyboardButton(text="–ú–µ–Ω—é")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await asyncio.sleep(2)
    await message.answer("–∞–±–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é", reply_markup=keyboard)

    # @router.message()
    # async def cmd_novinki(message: types.Message):
    #     films = message.text
    #     film = await search_films(films)
    #     if film:
    #         await message.answer(f"—Ñ—ñ–ª—å–º –∑–Ω–∞–π–¥–µ–Ω–æ:  {film}")
    #     else:
    #         text = str("–¢–∞–∫–æ–≥–æ —Ñ—ñ–ª—å–º—É –Ω–µ–º–∞—î")

    #     @router.message()
    # async def cmd_novinki(message: types.Message):
    #     films = message.text
    #     name, zhanr, year, rating = await search_films(films)

    #     if name:
    #         await message.answer("üëæ")
    #         await message.answer(f"–ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—ñ–ª—å–º –Ω–∞ –≤–µ—á—ñ—Ä üëæ: \n—ñ–º'—è: {name}\n–∂–∞–Ω—Ä: {zhanr}\n—Ä—ñ–∫: {year}\n—Ä–µ–π—Ç–∏–Ω–≥: {rating}")
    #     else:
    #         await message.answer("–§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    # await message.reply(full_text, reply_markup=types.ReplyKeyboardRemove())
